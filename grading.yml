# This is a separate section containing a few templates that we will use below.
# The & feature is built into YAML, it is not a special feature of the website.
# The section does not need to be called `templates` necessarily.

templates:
    1: &automatisch
        type: points
        subgrades:
            akkoord: boolean
        automatic:
            akkoord: -(correctness_score.floor)
        calculation: akkoord
        auto_publish: true
        hide_subgrades: true
    4: &semiautomatisch
        type: points
        subgrades:
            akkoord: boolean
        automatic:
            akkoord: -(correctness_score.floor)
        calculation: akkoord
        hide_subgrades: true
    2: &punten
        type: points
        subgrades:
            punten: float
        calculation: punten
        hide_subgrades: true
    3: &aftekenen
        type: points
        subgrades:
            akkoord: boolean
        calculation: akkoord
        hide_subgrades: true

# GRADES - contains definitions of how grades are structured. The names of the
# grades match the names of submits that may be defined in `submit.yml`
# elsewhere, but you can also create grades without an accompanying submit.
#
# The following properties are supported:
#
# - `type` can be `integer`, `float` or `pass`, which influences presentation
# and input
#
# - `subgrades` defines any extra numbers to be added to a grade, with their
# types `integer`, `pass`, `boolean` or `float`
#
# - note: if any subgrades are defined, teaching assistants are only allowed to
# enter those, and can't override the grade itself
#
# - `calculation` is an expression that is evaluated in the context of the
# subgrades, which means you can use any subgrade by name in that expression, as
# well as any standard Ruby objects and syntax
#
# - `automatic` is an expression that is evaluated in the context of any
# automatic grading results (as defined in `submit.yml`) - allowing the use of
# the variable `correctness_score`. It can only be used to fill in subgrades,
# but you can then use the `calculation` to transfer the value of a subgrade
# into the grade.
#
# - `hide_calculated` hides the calculated grade, only showing the entered
# subgrades (to de-emphasize grades for students)
#
# - `hide_subgrades` hides the subgrades, for example if you want to do a simple
# calculation but only show the resulting grade to students
#
# You can leave this out if grading isn't used or if each submit simply requires
# entering a final grade, no subgrades and no calculations.

grades:

    # Python

    mario:
        <<: *automatisch
        deadline: 3/11/23 17:00
    readability:
        <<: *automatisch
        deadline: 3/11/23 17:00
    schuifpuzzel:
        <<: *automatisch
        automatic:
            akkoord: -(correctness_score.floor/4)
        deadline: 3/11/23 17:00

    # Complexiteit

    dicts_practice:
        <<: *aftekenen
        deadline: 10/11/23 17:00
    sets_practice:
        <<: *aftekenen
        deadline: 10/11/23 17:00
    big-o-questions:
        <<: *aftekenen
        deadline: 10/11/23 17:00
    jaccard:
        <<: *aftekenen
        deadline: 10/11/23 17:00
    indexer:
        <<: *aftekenen
        deadline: 10/11/23 17:00

    # Objects

    queue:
        <<: *automatisch
        deadline: 17/11/23 17:00
    cards:
        <<: *automatisch
        deadline: 17/11/23 17:00
    hangman-less:
        <<: *semiautomatisch
        deadline: 17/11/23 17:00

    # Tools

    python_contract:
        <<: *aftekenen
        deadline: 24/11/23 17:00
    python_type_hints:
        <<: *aftekenen
        deadline: 24/11/23 17:00
    python_tests:
        <<: *aftekenen
        deadline: 24/11/23 17:00
    quality:
        <<: *punten
        deadline: 24/11/23 17:00

    # Challenges

    cash_tests:
        <<: *punten
        deadline: 24/11/23 17:00
    kalender_tests:
        <<: *punten
        deadline: 24/11/23 17:00

    # Abstractions

    card_implementations:
        <<: *aftekenen
        deadline: 01/12/23 17:00
    figuren:
        <<: *automatisch
        automatic:
            akkoord: -(correctness_score.floor/1)
        auto_publish: false
        deadline: 01/12/23 17:00
    containers_lists:
        <<: *aftekenen
        deadline: 01/12/23 17:00
    containers_dicts:
        <<: *aftekenen
        deadline: 01/12/23 17:00

    # Structures

    palindrome:
        <<: *aftekenen
        deadline: 15/12/23 17:00
    adventure-more:
        <<: *semiautomatisch
        subgrades:
            check_points: integer
            quality_points: integer
        automatic:
            check_points: (correctness_score * 5).round
        calculation: check_points + quality_points
        deadline: 15/12/23 17:00

    # Performance

    profilers:
        <<: *punten
        deadline: 15/12/23 17:00

# FINAL GRADES

calculation:
    eindcijfer:
        python: 2
        complexiteit: 2
        objects: 2
        tools: 2
        challenges: 2
        abstraction: 2
        structures: 2
        profiling: 1

python:
    type: points
    show_progress: true
    submits:
        mario: 2
        readability: 2
        schuifpuzzel: 2

complexiteit:
    type: points
    show_progress: true
    submits:
        dicts_practice: 1
        sets_practice: 1
        big-o-questions: 1
        jaccard: 1
        indexer: 2

objects:
    type: points
    show_progress: true
    submits:
        queue: 1
        cards: 1
        hangman-less: 4

tools:
    type: points
    show_progress: true
    submits:
        python_contract: 0
        python_type_hints: 0
        python_tests: 0
        quality: 3

challenges:
    type: points
    show_progress: true
    submits:
        cash_tests: 3
        kalender_tests: 3

abstraction:
    type: points
    show_progress: true
    submits:
        card_implementations: 1.5
        figuren: 1.5
        containers_lists: 1.5
        containers_dicts: 1.5

structures:
    type: points
    show_progress: true
    submits:
        palindrome: 1
        adventure-more: 8

profiling:
    type: points
    show_progress: true
    submits:
        profilers: 3
